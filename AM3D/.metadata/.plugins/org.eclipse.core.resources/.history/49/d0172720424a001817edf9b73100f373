import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JLabel;

public class MecShop extends JFrame{

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	
	ArrayList<Client> LlistaClients = new ArrayList();
	private JTextField txtDni;
	public static void main(String[] args) {

		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MecShop window = new MecShop();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 * @throws Exepction 
	 */
	public MecShop() throws Exepction {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() throws Exepction {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 315);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JTextArea textArea = new JTextArea();
		textArea.setBounds(10, 88, 414, 162);
		frame.getContentPane().add(textArea);
		
		JButton btnOrdenarPerMarca = new JButton("Click per a mostrar");
		btnOrdenarPerMarca.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String contingut="";
				Collections.sort(LlistaClients, new CompareMarca());
				textArea.setText("");
				Iterator <Client> itr;
				itr=LlistaClients.iterator();
				while(itr.hasNext()){
					contingut = contingut + itr.next() + "\n";
				}
				textArea.setText(contingut);
				
				
			}
			
		});
		btnOrdenarPerMarca.setBounds(0, 32, 148, 23);
		frame.getContentPane().add(btnOrdenarPerMarca);
		
		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setBounds(247, 63, 46, 14);
		frame.getContentPane().add(lblNewLabel);
		
		JButton btnBuscar = new JButton("Buscar");
		btnBuscar.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				Iterator<Client> itr;
				itr = LlistaClients.iterator();
				int pos=0;

				
				while (itr.hasNext()){
					String dni = itr.next().getDni();
					if(dni.endsWith(txtDni.getText())){
						lblNewLabel.setText(Integer.toString(pos));
					}
					pos=pos +1;
				}
			}
			
		});
		btnBuscar.setBounds(177, 32, 89, 23);
		frame.getContentPane().add(btnBuscar);
		
		JButton btnEscriure = new JButton("Escriure");
		btnEscriure.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
				SaveFile(textArea.getText());
				
			}
			
		});
		btnEscriure.setBounds(335, 32, 89, 23);
		frame.getContentPane().add(btnEscriure);
		
		txtDni = new JTextField();
		txtDni.setBounds(180, 11, 86, 20);
		frame.getContentPane().add(txtDni);
		txtDni.setColumns(10);
		
		JLabel lblEstaALa = new JLabel("Esta a la pos:");
		lblEstaALa.setBounds(170, 63, 76, 14);
		frame.getContentPane().add(lblEstaALa);
		
		
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mnNewMenu = new JMenu("Cargar");
		menuBar.add(mnNewMenu);
		
		JMenuItem mntmCarregarClients = new JMenuItem("Carregar clients");
		mntmCarregarClients.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent arg0)  {
				// TODO Auto-generated method stub
				
				File ficher = new File("D:/Clients.txt");
				String linia;
				String contingut="";
				//spagheti
				textArea.setText("");
				try {
					FileReader fr = new FileReader(ficher);
					int kms;
					int preu;
					BufferedReader br = new BufferedReader(fr);
					while((linia=br.readLine())!=null){
						List <String> l=Arrays.asList(linia.split("\\,"));
						kms=Integer.parseInt(l.get(6));
						if(kms == 0){
							throw new Exepction(Exepction.km);
						}
						preu=Integer.parseInt(l.get(7));
						Vehicle v = new Vehicle(l.get(3),l.get(4),l.get(5),kms,preu);
						Client p= new Client(l.get(0),l.get(1),l.get(2),v);
						System.out.println(p);
						LlistaClients.add(p);
			
					}
					fr.close();
					br.close();
					Iterator <Client> itr;
					itr=LlistaClients.iterator();
					while(itr.hasNext()){
						contingut = contingut + itr.next() + "\n";
					}		
				} catch (IOException o) {
					// TODO Auto-generated catch block
					o.printStackTrace();
				} catch (Exepction e) {
					e.printStackTrace();
				}finally{
					textArea.setText("");
					textArea.setText(contingut);
				}
				
			}
				
		});
		mnNewMenu.add(mntmCarregarClients);
	}
	
	public void SaveFile(String text) throws IOException{
		JFileChooser fileChooser=new JFileChooser();
		File file;
		fileChooser.showSaveDialog(this);
		file=fileChooser.getSelectedFile();
		try{
			FileWriter fr = new FileWriter(file);
			fr.write(text);
		}catch(IOException e){
			
		}
		
		
		
	}
}
